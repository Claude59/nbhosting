# -*- shell-script -*-

#
# aliases : developer helper functions to inspect various logs 
#

##########
### stolen from the 'systemd' component in diana's bash system
alias syc=systemctl
alias sya='systemctl start'
alias syo='systemctl stop'
alias syr='systemctl restart'
alias syt='systemctl status'

alias joc=journalctl

function jou() {
    local usage="jou [journalctl-options] unit [.. unit]"
    options=""
    while [[ "$1" =~ ^-.* ]]; do
	options="$options $1"; shift
    done
    [[ -n $@ ]] || { echo $usage; return; }
    units=""
    for unit in "$@"; do
	units="$units --unit $unit"
    done
    journalctl $options $units
}
##########

here=$(dirname $(readlink -f $BASH_SOURCE))

# add $here to PATH
export PATH=.:$here:$PATH

function refresh() {
    source $here/logaliases
}

########## stolen from comp-miscell.ish
function jou-nginx()		{ jou -f nginx; }
function jou-uwsgi()	        { jou -f nbh-uwsgi; }
function jou-monitor()	        { jou -f nbh-monitor; }
function jou-docker()		{ jou -f docker; }
function jou-all()		{ jou -f nginx docker nbh-uwsgi nbh-monitor; }

##########
function logs-nginx() {
    -logs $(find /var/log -type f | grep nginx | egrep -v '\.(gz|[0-9]+)$')
}

function logs-nbhosting() {
    -logs $(find /nbhosting/logs -type f)
}

function -logs() {
    logs="$@"
    echo ++++++++++
    ls -l $logs
    echo ++++++++++
    echo -n "OK ? "; read _
    tail -f $logs
}

function logs-jup() { student=$1; shift; docker logs -f flotbioinfo-x-$student; }


########################################
[ $(type -t ls) == alias ] && unalias ls

BTRFS=/homefs/btrfs

alias r="source /tmp/aliases"
alias cdm="cd /homefs/btrfs/machines"

########## btrfs
alias b=btrfs
alias bv="btrfs subvolume"
alias bvd="btrfs subvolume delete"
alias bvl="btrfs subvolume list $BTRFS"

# hybrid
alias bs="d status-btrfs"

########## driver
alias d=/tmp/nbh
alias ducm="d update-course-machine"
alias ds="d spawn-container-in-course-for-student"
alias de="d enter-spawned-container"

########## spawn
alias syp=systemd-nspawn

alias m=machinectl
alias mk="machinectl kill"

