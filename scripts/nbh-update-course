#!/bin/bash

# pull from upstream git repo
# and updates the various parts accordingly

COMMAND=$(basename $0)
USAGE="Usage: $COMMAND nbhosting-root course" 

[ "$#" -eq 2 ] || { echo $USAGE; exit 1; }

function echo-stderr() {
    >&2 echo $(date "+%H:%M:%S") "$@"
}

function die() {
    echo-stderr "$@"
    exit 1
}

root=$1; shift
course=$1; shift

# make sure root is absolute
root=$(cd $root; pwd -P)
#
course_git=$root/courses-git/$course

course_notebooks=$root/courses/$course
course_modules=$root/modules/$course
course_static=$root/static/$course
course_data=$root/static/$course/data
course_media=$root/static/$course/media
course_jupyter=$root/jupyter/$course
course_stats=$root/stats/$course

course_logs=$root/logs/$course
log=$root/logs/$course/000.log

# check the course is known
[ -d $course_git ] || die "Cannot find git repo $course_git"
# initialize 
[ -d $course_notebooks ] || {
    echo Creating notebooks dir $course_notebooks
    mkdir -p $course_notebooks
}

rsync="rsync --recursive --copy-unsafe-links --perms --times --force --delete"

# start with the florian-benjamin's code
# xxx needs fine tuning of rsync options for archive mode and similar
function update-course() {

    [ -d $course_git ] || {
	echo "$COMMAND: $course has not git repo in $course_git - aborting"
	exit
    }

    echo ==========  $(date): update-course

    cd $course_git
    git pull
    git submodule init
    git submodule update
    
    # create course dirs if needed
    for dir in $course_notebooks $course_modules $course_data $course_media $course_stats; do
	[ -d $dir ] || {
	    echo Creating $dir
	    mkdir -p $dir
	}
    done

    # find out all immediate subdirs that contain at least one notebook
    # also, ignore nbformat2 since we have jupyter4 here
    notebook_subdirs=$(find . -name '*.ipynb' | sed -e "s,^\./,," -e "s,/.*,," | grep -v '^nbformat2$' | sort -u)
    [ -n "$notebook_subdirs" ] && $rsync $notebook_subdirs $course_notebooks/
    [ -d modules ] && { $rsync modules/ $course_modules; chmod -R g-w,o-w $course_modules; }
    [ -d static ] && { $rsync static/ $course_static; chmod -R g-w,o-w $course_static; }
    # for compat with previous git repo layout
    for subdir in media data; do
	[ -d $subdir ] && $rsync $subdir $course_static
	chmod -R g-w,o-w $course_static
    done
    [ -d $course_jupyter ] || mkdir -p $course_jupyter
    for file in jupyter_notebook_config.py custom.js custom.css; do
	[ -f $course_jupyter/$file ] || touch $course_jupyter/$file
    done
}

[ -d $course_logs ] || mkdir -p $course_logs
update-course >> $log 2>&1
